version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: development
    container_name: party_backend
    env_file:
      - docker-compose.env
    environment:
      PORT: ${BACKEND_PORT}
    ports:
      - "${BACKEND_PORT:-4000}:4000"
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    depends_on:
      - db

  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
      target: development
    container_name: party_admin
    env_file:
      - docker-compose.env
    environment:
      PORT: ${ADMIN_PORT}
    ports:
      - "${ADMIN_PORT:-3000}:3000"
    volumes:
      - ./apps/admin:/app
      - /app/node_modules
    depends_on:
      - backend

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
      target: development
    container_name: party_consumer
    env_file:
      - docker-compose.env
    environment:
      PORT: ${CONSUMER_PORT}
    ports:
      - "${CONSUMER_PORT:-3001}:3000"
    volumes:
      - ./apps/consumer:/app
      - /app/node_modules
    depends_on:
      - backend

  db:
    image: postgres:16
    container_name: postgres
    restart: always
    env_file:
      - docker-compose.env
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    env_file:
      - docker-compose.env
    ports:
      - "8080:80"
    depends_on:
      - db

volumes:
  postgres_data:
